# Generated by Django 3.2.9 on 2021-12-19 09:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('membership', models.CharField(choices=[('B', 'Bronze'), ('S', 'Silver'), ('G', 'Gold')], default='B', max_length=1)),
                ('img_avatar', models.CharField(default='https://png.pngtree.com/png-vector/20190710/ourmid/pngtree-user-vector-avatar-png-image_1541962.jpg', max_length=2083)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(default='-')),
                ('category', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('D', 'draft'), ('P', 'published')], default='D', max_length=1)),
                ('publish', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('img_primary', models.CharField(max_length=2083, null=True)),
                ('comment_user', models.ManyToManyField(through='mainPage.Comment', to=settings.AUTH_USER_MODEL)),
                ('userpost', models.ManyToManyField(blank=True, null=True, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SmartPhone',
            fields=[
                ('smartphone_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('memory', models.CharField(max_length=255)),
                ('cpu', models.CharField(max_length=255)),
                ('display', models.CharField(max_length=255)),
                ('body', models.CharField(max_length=255)),
                ('network', models.CharField(max_length=255)),
                ('camera', models.CharField(max_length=255)),
                ('battery', models.CharField(max_length=255)),
                ('os', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255)),
                ('brand', models.CharField(max_length=255)),
                ('time_release', models.DateField(null=True)),
                ('slug', models.SlugField(default='+')),
                ('score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('img_primary', models.CharField(max_length=2083, null=True)),
                ('user', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SmartPhoneImgUrl',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('img_url', models.CharField(max_length=2083)),
                ('smartphone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainPage.smartphone')),
            ],
        ),
        migrations.CreateModel(
            name='SmartPhoneDescription',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('smartphone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainPage.smartphone')),
            ],
        ),
        migrations.CreateModel(
            name='PostImgUrl',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('img_url', models.CharField(max_length=2083)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainPage.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostDescription',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainPage.post')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainPage.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
